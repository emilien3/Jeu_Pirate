/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package boundaryComponants;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author Oscar
 */
public class barreDeVie extends ImageDisplayer {
    
    // Pour la partie interne au système
    private int nombrePV = 0;
    private int imWidth;
    private int maxPV = 5;
    
    // Pour la partie affichage
    private String imagePlein = "coeurPlein";
    private String imageVide = "coeurVide";
    private BufferedImage coeurPlein;
    private BufferedImage coeurVide;

    /**
     * Creates new form pointDeVie
     */
    public barreDeVie() {
        initComponents();

        // Init des images
        updateImagesFiles();
        
    }
    
    /**
     * Met a jour les fichiers utilisés lors l'affichage de la barre de vie.
     * ATTENTION : Penser à actualiser le composant avec repaint() ensuite
     */
    @Override
    protected void updateImagesFiles() {
        try {
            coeurPlein = ImageIO.read(
                    getClass().getResource("/" + imagePlein + getImageExtension()));
            coeurVide = ImageIO.read(
                    getClass().getResource("/" + imageVide + getImageExtension()));
            
            this.imWidth = coeurPlein.getWidth();
            
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    /**
     * Setter pour l'attribut nombrePV.
     * ATTENTION : Cette fonction appelle repaint() pour mettre à jour
     * l'affichage
     * @param value nouvelle valeur pour les points de vie
     */
    public void setNombrePV(int value) {
        // Pour l'édition dans le GUI
        firePropertyChange("Nombre PV", null, nombrePV);
        
        // Pour éviter les dépassements
        if(value > maxPV) {nombrePV = maxPV;}
        else if(value < 0) {nombrePV = 0;}
        else {nombrePV = value;}
        
        // On actualise l'affichage
        repaint();  
    }
    
    /**
     * Getter pour l'attribut nombrePV.
     * @return la valeut de nombrePV
     */
    public int getNombrePV() {
        return nombrePV;
    }
    
    /**
     * cf. super.paintComponent(Graphics g)
     * Dessine les points de vie basés sur les images chargées les uns à la
     * suite des autres.
     * @param g variable d'environnement graphique
     */
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        // Afficher les points de vie
        for(int i = 0; i < nombrePV; i++) {
            g.drawImage(coeurPlein, i * imWidth, 0, null);
        }
        for(int i = nombrePV; i < maxPV; i++) {
            g.drawImage(coeurVide, i * imWidth, 0, null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMaximumSize(new java.awt.Dimension(160, 32));
        setMinimumSize(new java.awt.Dimension(160, 32));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(160, 32));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
