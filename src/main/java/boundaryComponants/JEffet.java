/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package boundaryComponants;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import static model.Etat.ESTPOURSUIVI;
import static model.Etat.ESTPRISON;
import static model.Etat.PASSETOUR;

/**
 *
 * @author Oscar
 */
public class JEffet extends javax.swing.JPanel {
    private BufferedImage effetImage;
    private model.Etat etat = model.Etat.ESTVIVANT;
    private String image = null;
    private int changement = 0;
          
    
    /**
     * Creates new form Effet
     */
    public JEffet() {
        initComponents();
        
        // Init du label
        updateLabels();
        
        // Mise à jour de l'image
        updateImageFile();
    }

    public model.Etat getEffet() {
        return etat;
    }

    public void setEffet(model.Etat etat) {
        this.etat = etat;
        
        // Pour l'édition dans le GUI
        firePropertyChange("effet", null, etat);
        
        // Mise à jour de l'image
        updateImageFile();
        updateLabels();
        
        // repaint de la frame
        repaint();
    }
    
    public void setChangement(int changement) {
        this.changement  = changement;
        
        // Pour l'édition dans le GUI
        firePropertyChange("changement", 0, changement);
        
        // Mise à jour de l'image
        updateImageFile();
        updateLabels();
        
        // repaint de la frame
        repaint();
    }
        
    private void updateImageFile() {
        switch(etat) {
            case PASSETOUR:
                image = "avalanche";
                break;
            case ESTPRISON:
                image = "lianes";
                break;
            case ESTPOURSUIVI:
                image = "monstre";
                break;
            default:
                if (changement<0){
                    image = "crane";
                }else if (changement>0){
                    image = "nourriture";
                }else{
                    image = null;
                }
                break;
        }
        if(image == null)
            return;
        
        try {
            effetImage = ImageIO.read(
                    getClass().getResource("/" + image + ".png"));
            
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void updateLabels() {
        String nom, description;
        switch(etat) {
            case PASSETOUR:
                nom = "Bloqué";
                description = "Passe un tour";
                break;
            case ESTPRISON:
                nom = "Emprisonné";
                description = "Jusqu'à faire un 10";
                break;
            case ESTPOURSUIVI:
                nom = "Poursuivi";
                description = "Doit faire un 8";
                break;
            default:
                if (changement > 0){
                    nom = "Boost";
                    description = "+" + changement + " au prochain lancer";
                }else if (changement < 0){
                    nom = "Malus";
                    description = changement + " au prochain lancer";
                }else{
                    nom = "";
                    description = "";
                }
        }
        labelNomEffet.setText(nom);
        labelDescriptionEffet.setText(description);
    }
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        if(etat != model.Etat.ESTVIVANT || changement !=0)
            g.drawImage(effetImage, 0, 0,64, 64, null);
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNomEffet = new javax.swing.JLabel();
        labelDescriptionEffet = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(160, 90));

        labelNomEffet.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N

        labelDescriptionEffet.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDescriptionEffet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 46, Short.MAX_VALUE)
                        .addComponent(labelNomEffet, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(labelNomEffet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelDescriptionEffet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelDescriptionEffet;
    private javax.swing.JLabel labelNomEffet;
    // End of variables declaration//GEN-END:variables
}
