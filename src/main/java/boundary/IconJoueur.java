/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package boundary;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author ogled
 */
public class IconJoueur extends ImageDisplayer {
    
    private String sourcePath = "joueur";
    private BufferedImage icon;

    /**
     * Creates new form IconeJoueur
     */
    public IconJoueur() {
        initComponents();
        
        // Initialisation de la résolution de base
        baseResolution = 64;
        
        // Initialisation de l'image
        updateImagesFiles();
    }
    
    /**
     * cf. super.paintComponent(Graphics g)
     * Dessine les points de vie basés sur les images chargées les uns à la
     * suite des autres.
     * @param g variable d'environnement graphique
     */
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        // Afficher le personnage
        g.drawImage(icon, 0, 0, null);
    }
    
    /**
     * Met a jour l'icone du personnage.
     * ATTENTION : Penser à actualiser le composant avec repaint() ensuite
     */
    @Override
    protected void updateImagesFiles() {
        try {
            this.icon = ImageIO.read(getClass().getResource("/" + sourcePath + getImageExtension()));
            
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMaximumSize(new java.awt.Dimension(64, 64));
        setMinimumSize(new java.awt.Dimension(64, 64));
        setPreferredSize(new java.awt.Dimension(64, 64));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
